{%- set data = pillar.cluster.configure.template.parameters %}
{%- set drbd = salt['pillar.get']('drbd', default={}, merge=True) %}
{%- set nfsid = 1 %}
{%- set cidr_netmask = "cidr_netmask="~data.virtual_ip_mask|default("32") %}
{%- set nic = "nic="~pillar.cluster.interface|json if pillar.cluster.interface is defined else "" %}

###########
# Defaults
###########

rsc_defaults \
  resource-stickiness="1000" \
  migration-threshold="5000"

op_defaults \
  timeout="600"

##########################
# NFS Server resources
##########################

primitive nfsserver systemd:nfs-server \
  op monitor interval=30s

clone cl-nfsserver nfsserver \
  meta interleave=true

###########################
# Loop over DRBD resources
###########################

# Need to edit drbd pillar file.
{%- for res in drbd.resource %}

  ######################################
  # Floating IP address resource agents
  ######################################

  primitive rsc_ip_{{ res.name }}_nfs ocf:heartbeat:IPaddr2 \
    params ip={{ data.virtual_ip }} {{ cidr_netmask }} {{ nic }}

  group g_ip_{{ res.name }}_nfs fs_{{ res.name }} rsc_ip_{{ res.name }}_nfs exportfs_work_{{ res.name }}
  
  order ord_drbd_{{ res.name }}-before-fs_{{ res.name }} \
    ms_{{ res.name }}:promote g_ip_{{ res.name }}_nfs:start

  colocation col_fs_{{ res.name }}-with_drbd_{{ res.name }} \
    inf: g_ip_{{ res.name }}_nfs ms_{{ res.name }}:Master

  ##########################
  # DRBD resources
  ##########################
  
  primitive drbd_{{ res.name }} ocf:linbit:drbd \
    params drbd_resource={{ res.name }} \
    op monitor interval=15 role=Master \
    op monitor interval=30 role=Slave
  
  ms ms_{{ res.name }} drbd_{{ res.name }} \
    meta master-max=1 master-node-max=1 \
    meta clone-max={{ res.nodes | length }} clone-node-max=1 \
    meta notify=true target-role=Started
  
  primitive fs_{{ res.name }} ocf:heartbeat:Filesystem \
    params device={{ res.device }} directory={{ res.mount_point }} fstype={{ res.file_system }} \
    options=noatime,nodiratime \
    op monitor interval="20" timeout="40s"

  ##########################
  # NFS export resources
  ##########################
  
  primitive exportfs_work_{{ res.name }} exportfs \
    params directory={{ res.mount_point }} fsid={{ nfsid + loop.index0 }} \
    options="rw,no_root_squash" clientspec="*" wait_for_leasetime_on_stop=true \
    op monitor interval=30s
  
{%- endfor %}
